% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simEventCox.R
\name{simEventCox}
\alias{simEventCox}
\title{Simulate Event History Data Based on Cox Models}
\usage{
simEventCox(
  N,
  cox_fits,
  L0_old,
  A0_old,
  max_events = 5,
  n_event_max = c(1, 1),
  term_events = 1,
  intervention = list(`No Int` = NULL)
)
}
\arguments{
\item{N}{Integer. The number of individuals to simulate.}

\item{cox_fits}{A list of fitted Cox models (\code{coxph} objects), one for each type of event. Should be named, so that the
names can be used as column names.}

\item{L0_old}{A vector of previously observed baseline covariate values for L0. Used for resampling.}

\item{A0_old}{A vector of previously observed baseline covariate values for A0. Used for resampling.}

\item{max_events}{Integer. The maximum number of events to simulate (i.e., simulation rounds).}

\item{n_event_max}{Integer vector. Maximum number of times each event type can occur per individual.}

\item{term_events}{Integer or vector of integers. Indices of event types that are terminal (i.e., stop further simulation for an individual).}

\item{intervention}{description}
}
\value{
A \code{data.table} with one row per event per individual, including:
\itemize{
\item \code{ID} — Individual identifier.
\item \code{Time} — Event time.
\item \code{Delta} — Type of event that occurred.
\item \code{L0}, \code{A0} — Baseline covariates.
\item One column for each event type, indicating cumulative counts.
}
}
\description{
Simulates recurrent and terminal event data for a cohort of individuals based on a list
of fitted Cox proportional hazards models. Each event type is governed by its own model,
and simulation proceeds by iteratively sampling event times until a terminal event occurs.
}
\details{
The function simulates individual event histories by:
\enumerate{
\item Sampling initial covariate values (L0, A0) from provided vectors.
\item Iteratively computing cumulative hazard functions based on provided Cox models.
\item Drawing event times using inverse transform sampling.
\item Updating covariate histories and censoring individuals after terminal events.
}
Simulation stops for an individual once a terminal event (as defined by \code{term_events}) occurs.

The function supports multiple event types, and different maximum occurrences for each via \code{n_event_max}.
}
\examples{
# The observed data
data_obs <- simT2D(N = 1000)
data_obs <- IntFormatData(data_obs, N_cols = 6)

# Fit some Cox models
cox_death <- survival::coxph(survival::Surv(tstart, tstop, Delta == 1)
~ L0 + A0 + L, data = data_obs)
cox_t2d <- survival::coxph(survival::Surv(tstart, tstop, Delta == 2)
~ L0 + A0, data = data_obs[L == 0])

# Then simulate new data:
cox_fits <- list("D" = cox_death, "L" = cox_t2d)
new_data <- simEventCox(100, cox_fits = cox_fits, L0_old = data_obs$L0, A0_old = data_obs$A0)

}
